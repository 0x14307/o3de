/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#include <Atom/Features/RayTracing/RayTracingSrgs.azsli>
#include <RayTracingDebugCommon.azsli>

[shader("raygeneration")]
void RayGeneration()
{
    uint2 pixelCoords = DispatchRaysIndex().xy;
    uint2 dimensions = DispatchRaysDimensions().xy;
    float2 coordsNDC = ((float2)pixelCoords / dimensions * 2.f - 1.f) * float2(1.f, -1.f);

    float4 rayTarget = mul(ViewSrg::m_viewProjectionInverseMatrix, float4(coordsNDC, 1.f, 1.f));
    float3 rayDir = normalize(rayTarget.xyz / rayTarget.w - ViewSrg::m_worldPosition);

    RayDesc ray;
    ray.Origin = ViewSrg::m_worldPosition;
    ray.Direction = rayDir;
    ray.TMin = 0.01f;
    ray.TMax = 10000;
    PayloadData payload;
    TraceRay(RayTracingSceneSrg::m_scene, RAY_FLAG_NONE, 0xFF, 0, 1, 0, ray, payload);

    RayTracingGlobalSrg::m_fallbackColor[pixelCoords] = float4(payload.m_color, 1);
}
