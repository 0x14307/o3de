/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */
 
#include <viewsrg.srgi>

partial ShaderResourceGroup PassSrg : SRG_PerPass_WithFallback
{
    // The minimum blend about that will be calculated through depth transitioning
    float m_minDepthTransitionValue;
    
    // Start of depth transtion for unmasked effect blending
    float m_depthTransitionStart;

    // The duration of the depth transition band (0.0 = no depth transitioning will be applied)
    float m_depthTransitionDuration;

    // The final blend amount level that is used to scale the calculated blend values
    float m_finalBlendAmount;

    float GetLinearDepth(float zDepth)
    {
        return abs(((ViewSrg::GetFarZTimesNearZ()) / (ViewSrg::GetFarZMinusNearZ() * zDepth - ViewSrg::GetFarZ()))); 
    }

    float GetDepthTransitionBlendAmount(const float linearDepth, const float maskValue)
    {
        const float depthTransition = clamp((linearDepth - m_depthTransitionStart) / (m_depthTransitionDuration), m_minDepthTransitionValue, 1.0);
        return 1.0 - clamp(maskValue * depthTransition, 0.0, 1.0);
    }
}