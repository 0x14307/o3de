/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */
 
#include <EditorModeCommon.azsli>

#include <Atom/Features/SrgSemantics.azsli> 
#include <Atom/Features/PostProcessing/FullscreenPixelInfo.azsli>
#include <Atom/Features/PostProcessing/FullscreenVertex.azsli>
 
partial ShaderResourceGroup PassSrg : SRG_PerPass_WithFallback
{
    Texture2D<float4> m_framebuffer;
    Texture2D<float4> m_depth;
    Texture2D<float4> m_entityMask;
    
    Sampler LinearSampler
    {
        MinFilter = Linear;
        MagFilter = Linear;
        MipFilter = Linear;
        AddressU = Clamp;
        AddressV = Clamp;
        AddressW = Clamp;
    };

    Sampler PointSampler
    {
        MinFilter = Point;
        MagFilter = Point;
        MipFilter = Point;
        AddressU = Clamp;
        AddressV = Clamp;
        AddressW = Clamp;
    };
 
    float m_desaturationAmount;
    float m_grayscaleAmount;
}

PSOutput MainPS(VSOutput IN)
{
    PSOutput OUT;

    const float3 inColor = PassSrg::m_framebuffer.Sample(PassSrg::LinearSampler, IN.m_texCoord).rgb;
    const float mask = PassSrg::m_entityMask.Sample(PassSrg::PointSampler, IN.m_texCoord);

    // Desaturation effect
    const float3 luminanceWeights = float3(0.299,0.587,0.114);
    const float luminance = dot(inColor, luminanceWeights);
    const float3 desaturationEffect = lerp(inColor, luminance, PassSrg::m_desaturationAmount);

    // Grayscale effect
    const float3 finalEffect = lerp(desaturationEffect, float3(0.0, 0.0, 0.0), PassSrg::m_grayscaleAmount);

    // Transitioned t value
    float t = mask;
    if(PassSrg::m_depthTransitionDuration > 0.0)
    {
        const float zDepth =  PassSrg::m_depth.Sample(PassSrg::PointSampler, IN.m_texCoord).r;
        const float linearDepth = PassSrg::GetLinearDepth(zDepth);
        t = PassSrg::GetDepthTransitionBlendAmount(linearDepth, mask);
    }
    
    // Apply the visual effect to non-mask entities, leaving mask entities untouched
    OUT.m_color.rgb = lerp(finalEffect.rgb, inColor.rgb, t);
    OUT.m_color.a = 1.0;

    return OUT;
}