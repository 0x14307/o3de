cmake_minimum_required(VERSION 3.20)

#Temp: Modify this to match the location you unpacked the pyside package to.
set(pyside2_module_dir "c:/ly/3rd_party/packages/pyside2-qt-5.15.2-rev1-windows/pyside2")

# The name of the Python import module we're generating.
set(bindings_library "azqtpyside")

# Configuration - To be modified if types/classes are added/removed.

# Header file containing all the types/classes we're exposing to Python.
set(wrapped_header ${CMAKE_CURRENT_LIST_DIR}/bindings_azqtcomponents.h)

# Typesystem xml.
set(typesystem_file ${CMAKE_CURRENT_LIST_DIR}/bindings_azqtcomponents.xml)

# A list of all the files generated by shiboken.
set(list_generated_sources
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtpyside_module_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/az_wrapper.cpp
    
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/az_color_wrapper.cpp
                                                      
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_buttondivider_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_buttonstripe_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_confighelpers_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_confighelpers_groupguard_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_dockbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_dockbarbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_dockbarbutton_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_dockmainwindow_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_docktabbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_docktabwidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_extendedlabel_wrapper.cpp    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_fancydocking_widgetgrab_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_fancydocking_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_fancydockingdropzonewidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_fancydockingghostwidget_wrapper.cpp 
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_filtercriteriabutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_searchtypefilter_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_searchtypeselector_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_filteredsearchwidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_filteredsearchwidget_config_wrapper.cpp

    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/flowlayout_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_globaleventfilter_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_helpbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_interactivewindowgeometrychanger_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_searchlineedit_wrapper.cpp  
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_style_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styledbusylabel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styleddetailstablemodel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styleddetailstableview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styleddialog_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styleddockwidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styledlineedit_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styleddoublespinbox_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styledspinbox_wrapper.cpp  
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_stylemanager_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_stylesheetcache_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_stylesheetpreprocessor_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tagselector_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_titlebar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_titlebar_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_titlebar_config_titlebar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_titlebar_config_icon_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_titlebar_config_title_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_titlebar_config_buttons_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_titlebaroverdrawhandler_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toastnotification_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toastconfiguration_wrapper.cpp  
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbararea_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbuttoncombobox_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbuttonlineedit_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbuttonwithwidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_vectoredit_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_windowdecorationwrapper_wrapper.cpp   
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_assetfolderlistview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_assetfolderthumbnailview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_assetfolderthumbnailview_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_assetfolderthumbnailview_config_thumbnail_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_assetfolderthumbnailview_config_expandbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_assetfolderthumbnailview_config_childframe_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_breadcrumbs_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_breadcrumbs_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_browseedit_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_card_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_card_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_cardheader_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_cardnotification_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_checkbox_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_checkbox_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorlabel_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorpicker_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_comboboxvalidator_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_combobox_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_combobox_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_dialogbuttonbox_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_draganddrop_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_draganddrop_dropindicator_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_draganddrop_dragindicator_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_draganddrop_config_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_elidinglabel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_eyedropper_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_eyedropper_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_filedialog_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_gradientslider_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_lineedit_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_lineedit_config_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_logicaltaborderingwidget_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_menu_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_menu_margins_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_menu_config_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_azmessagebox_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_overlaywidgetbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_overlaywidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_progressbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_progressbar_config_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_gradient_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_colorset_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_border_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_frame_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_smallicon_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_iconbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_dropdownbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_pushbutton_config_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_radiobutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_radiobutton_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_scrollbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_scrollbar_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_segmentbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_segmentcontrol_wrapper.cpp
    
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_customslider_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slider_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slider_border_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slider_gradientsliderconfig_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slider_sliderconfig_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slider_sliderconfig_handleconfig_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slider_sliderconfig_grooveconfig_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slider_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_sliderint_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_sliderdouble_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_slidercombo_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_sliderdoublecombo_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_spinbox_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_spinbox_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_statusbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_statusbar_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tableview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tableview_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tableviewmodel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tableviewitemdelegate_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tabwidgetactiontoolbarcontainer_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tabwidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tabwidget_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tabwidgetactiontoolbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_tabbar_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_text_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_text_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbar_toolbarconfig_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbar_config_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_toolbutton_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_treeview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_treeview_config_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_branchdelegate_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styledtreeview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_styledtreewidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_vectoreditelement_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_vectorelement_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_vectorinput_wrapper.cpp
    
    ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_internal_wrapper.cpp
    
    
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorcomponentedit_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_hslsliders_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_hsvsliders_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_rgbsliders_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorcomponentsliders_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_internal_colorcontroller_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorgrid_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorhexedit_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorhexedit_parsedcolor_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorpreview_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorrgbaedit_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_colorwarning_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_gammaedit_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_palette_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_palettecardbase_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_palettecard_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_quickpalettecard_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_palettecardcollection_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_paletteview_wrapper.cpp
    # ${CMAKE_CURRENT_BINARY_DIR}/${bindings_library}/azqtcomponents_swatch_wrapper.cpp
)

# End configuration


# Do not use RPATH to affect install_name on macOS.
if(POLICY CMP0068)
  cmake_policy(SET CMP0068 NEW)
endif()

# Allow AUTOMOC/AUTOUIC on generated files.
if(POLICY CMP0071)
  cmake_policy(SET CMP0071 NEW)
endif()

project(AzQtComponent_Bindings LANGUAGES CXX)
set(CMAKE_AUTOMOC ON)
find_package(Qt5 5.12 REQUIRED COMPONENTS Core Gui Widgets)

# The library we're creating bindings for.
set(azqtcomponents_library "AzQtComponents")

# Check we have a valid version of Python.
if(NOT python_interpreter)
    find_program(python_interpreter "python")
endif()

if(NOT python_interpreter)
    message(FATAL_ERROR "Error: Failed to locate Python installation.")
endif()

# Find the include directory for Python.
macro(find_python_includes out_python_includes_loc)
    execute_process(
        COMMAND ${python_interpreter} "${CMAKE_CURRENT_LIST_DIR}/utils/find_python_includes.py"
        OUTPUT_VARIABLE ${out_python_includes_loc}
    )
    
    if ("${${out_python_includes_loc}}" STREQUAL "")
        message(FATAL_ERROR "Error: Failed to locate Python include directory.")
    endif()
endmacro()

# Find the Python library and link flags.
macro(find_python_link_data out_python_link_data)
    execute_process(
        COMMAND ${python_interpreter} "${CMAKE_CURRENT_LIST_DIR}/utils/find_python_link_data.py"
        OUTPUT_VARIABLE ${out_python_link_data}
        OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    
endmacro()

find_python_includes(python_include_dir)
find_python_link_data(python_linking_data)


# Find the paths for the pyside2/shiboken modules - TODO restore this when 3rd_party setup is sorted.
#ly_get_package_association("pyside2" pyside_package_name)
#ly_package_get_target_folder(${pyside_package_name} pyside2_DOWNLOAD_LOCATION)
#set(pyside2_module_dir ${pyside2_DOWNLOAD_LOCATION}/${pyside_package_name}/pyside2)




set(pyside2_path "${pyside2_module_dir}/PySide2")
set(pyside2_include_dir "${pyside2_path}/include")
set(pyside2_typesystem_path "${pyside2_path}/typesystems")
   
set(shiboken_generator_dir "${pyside2_module_dir}/shiboken2_generator")   
set(shiboken_generator_exe_path "${shiboken_generator_dir}/shiboken2${CMAKE_EXECUTABLE_SUFFIX}") 
if(NOT EXISTS ${shiboken_generator_exe_path})
    message(FATAL_ERROR "Shiboken executable not found at path: ${shiboken_generator_dir}")
endif()
  
set(shiboken_module_path "${pyside2_module_dir}/shiboken2")

set(shiboken_include_dir "${shiboken_generator_dir}/include")
set(shiboken_shared_libraries "${shiboken_module_path}/shiboken2.abi3.lib")

set(pyside2_shared_libraries "${pyside2_path}/pyside2.abi3.lib")

# Find the qt package location.
ly_get_package_association("Qt" qt_package_name)
ly_package_get_target_folder(${qt_package_name} qt_DOWNLOAD_LOCATION)
set(qt_module_dir ${qt_DOWNLOAD_LOCATION}/${qt_package_name}/qt)


# ==================================== RPATH configuration ====================================

set(CMAKE_SKIP_BUILD_RPATH FALSE)
set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
set(CMAKE_INSTALL_RPATH ${shiboken_module_path} ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)


ly_download_associated_package(Qt) 

# MacOS: handle paths differently if Qt is being used from a framework.
get_target_property(QtCore_is_framework Qt5::Core FRAMEWORK)
if (QtCore_is_framework)
    get_target_property(qt_core_library_location Qt5::Core LOCATION)
    get_filename_component(qt_core_library_location_dir "${qt_core_library_location}" DIRECTORY)
    get_filename_component(lib_dir "${qt_core_library_location_dir}/../" ABSOLUTE)
    list(APPEND INCLUDES "--framework-include-paths=${lib_dir}")
endif()

# Add all the pyside2 include subdirectories to the incude path.
set(pyside2_additional_includes "")
foreach(INCLUDE_DIR ${pyside2_include_dir})
    list(APPEND pyside2_additional_includes "${INCLUDE_DIR}/QtCore")
    list(APPEND pyside2_additional_includes "${INCLUDE_DIR}/QtGui")
    list(APPEND pyside2_additional_includes "${INCLUDE_DIR}/QtWidgets")
endforeach()


# Define the shared library for which we will create bindings.
set_property(TARGET ${azqtcomponents_library} PROPERTY PREFIX "")

# Set up the options to pass to shiboken.
set(shiboken_options --generator-set=shiboken --enable-parent-ctor-heuristic
    --enable-pyside-extensions --enable-return-value-heuristic --use-isnull-as-nb_nonzero
    --avoid-protected-hack --language-level=c++17
    ${INCLUDES}
    -I${CMAKE_SOURCE_DIR}
    -I${CMAKE_CURRENT_LIST_DIR}/..
    -I"${LY_ROOT_FOLDER}/code/Framework/AzCore"
    -I"${LY_ROOT_FOLDER}/code/Framework/AzQtComponents"
    -I"${PROJECT_BINARY_DIR}/../AzQtComponents_autogen/include"
    -I"${LY_ROOT_FOLDER}/code/Framework/AzCore/Platform/${PAL_PLATFORM_NAME}"
    -I${pyside2_include_dir}
    -I"${pyside2_include_dir}/QtWidgets"
    -I"${pyside2_include_dir}/QtCore"
    -I"${pyside2_include_dir}/QtGui"
    -I"${pyside2_path}/typesystems"   
    -I"${qt_module_dir}/include"
    -I"${qt_module_dir}/include/QtWidgets"
    -I"${qt_module_dir}/include/QtCore"
    -I"${qt_module_dir}/include/QtGui"
    -T${CMAKE_SOURCE_DIR}
    -T"${pyside2_path}/typesystems"
    -T"${pyside2_path}"
    --output-directory=${CMAKE_CURRENT_BINARY_DIR}
    )

set(generated_sources_dependencies ${wrapped_header} ${typesystem_file})

# Run the shiboken command to generate the wrapper code files.
add_custom_command(OUTPUT ${list_generated_sources}
                    COMMAND ${shiboken_generator_exe_path}
                    ${shiboken_options} ${wrapped_header} ${typesystem_file}
                    DEPENDS ${generated_sources_dependencies}
                    INCLUDE_DIRECTORIES PRIVATE ${CMAKE_CURRENT_LIST_DIR}/..
                    IMPLICIT_DEPENDS CXX ${wrapped_header}
                    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
                    COMMENT "Running generator for ${typesystem_file}.")


# Define and build the bindings library.
add_library(${bindings_library} SHARED ${list_generated_sources})

# Setup include directories.
target_include_directories(${bindings_library} PRIVATE ${pyside2_additional_includes})
target_include_directories(${bindings_library} PRIVATE ${pyside2_include_dir})
target_include_directories(${bindings_library} PRIVATE ${python_include_dir})
target_include_directories(${bindings_library} PRIVATE ${shiboken_include_dir})
target_include_directories(${bindings_library} PRIVATE "${pyside2_include_dir}\\QtCore")
target_include_directories(${bindings_library} PRIVATE "${pyside2_include_dir}\\QtGui")
target_include_directories(${bindings_library} PRIVATE "${pyside2_include_dir}\\QtWidgets")
target_include_directories(${bindings_library} PRIVATE "${pyside2_include_dir}\\QtQuick")
target_include_directories(${bindings_library} PRIVATE "${pyside2_include_dir}\\QtNetwork")
target_include_directories(${bindings_library} PRIVATE "${pyside2_include_dir}\\QtQml")

# Add link libraries.
target_link_libraries(${bindings_library} PRIVATE Qt5::Widgets)
target_link_libraries(${bindings_library} PRIVATE ${azqtcomponents_library})
target_link_libraries(${bindings_library} PRIVATE ${pyside2_shared_libraries})
target_link_libraries(${bindings_library} PRIVATE ${shiboken_shared_libraries})

# Disable various warnings in generated wrapper code.

#"conditional expression is constant"
target_compile_options(${bindings_library} PRIVATE "/wd4127")

#"unreferenced formal parameter"
target_compile_options(${bindings_library} PRIVATE "/wd4100")

#"declaration of 'x' hides previous local declaration."
target_compile_options(${bindings_library} PRIVATE "/wd4456")

#"declaration of 'x' hides class member."
target_compile_options(${bindings_library} PRIVATE "/wd4458")

# Set the name of the module.
set_property(TARGET ${bindings_library} PROPERTY PREFIX "")
set_property(TARGET ${bindings_library} PROPERTY OUTPUT_NAME
             "${bindings_library}${PYTHON_EXTENSION_SUFFIX}")
if(WIN32)
    set_property(TARGET ${bindings_library} PROPERTY SUFFIX ".pyd")
endif()

# Make sure the linker doesn't complain about not finding Python symbols on macOS.
if(APPLE)
  set_target_properties(${bindings_library} PROPERTIES LINK_FLAGS "-undefined dynamic_lookup")
endif(APPLE)

# Find and link to the python import library only on Windows.
# On Linux and macOS, the undefined symbols will get resolved by the dynamic linker
# (the symbols will be picked up in the Python executable).
if (WIN32)
    list(GET python_linking_data 0 python_libdir)
    list(GET python_linking_data 1 python_lib)
    #message("libdir: ${python_libdir}")
    #message("lib: ${python_lib}")
    find_library(python_link_flags ${python_lib} PATHS ${python_libdir} HINTS ${python_libdir})
    #message("lf: ${python_link_flags}")
    target_link_libraries(${bindings_library} PRIVATE ${python_link_flags})
endif()

set(windows_shiboken_shared_libraries)

if(WIN32)
    # Ensure linking doesn't happen against the wrong libraries during #pragma comment(lib)
    set(python_additional_link_flags "/NODEFAULTLIB:\"python37.lib\" /NODEFAULTLIB:\"python37_d.lib\"")
    set(python_additional_link_flags ${python_additional_link_flags} "/NODEFAULTLIB:\"python3.lib\" /NODEFAULTLIB:\"python3_d.lib\"")

    set_target_properties(${bindings_library} PROPERTIES LINK_FLAGS "${python_additional_link_flags}")
endif()

message ("installing to: ${CMAKE_CURRENT_BINARY_DIR}")
install(FILES ${windows_shiboken_shared_libraries} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})