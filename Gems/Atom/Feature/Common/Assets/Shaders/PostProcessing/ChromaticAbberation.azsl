/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#include <scenesrg.srgi>

ShaderResourceGroup PassSrg : SRG_PerPass
{
    Texture2D<float4> m_inputColor;
    RWTexture2D<float4> m_outputColor;

    // Must match the struct in .cpp
    struct Constants
    {
        uint2 m_outputSize; // texture size of output
        float m_size; // size of border affected (0 to 1, 0.5 representing half way from edge to center)
        float m_strength; // strength of effect (0 to 1)
        float m_falloff; // distance
    };
    Constants m_constants;
}

[numthreads(8, 8, 1)]
void MainCS(uint3 dispatchThreadID : SV_DispatchThreadID)
{
    float2 uv = (dispatchThreadID.xy + 0.5) * PassSrg::m_constants.m_outputSize;
    
    float2 disp = uv - (PassSrg::m_constants.m_outputSize * 0.5f);
    float dist = length(disp);
    float vig = smoothstep(PassSrg::m_constants.m_size, PassSrg::m_constants.m_size - PassSrg::m_constants.m_falloff, dist);
    vig = 1.0 - lerp(vig, 1.0, PassSrg::m_constants.m_strength);
    float2 offset = disp * (vig * PassSrg::m_constants.m_strength);

    float r = PassSrg::m_inputColor[uv + offset].r;
    float g = PassSrg::m_inputColor[uv].g;
    float b = PassSrg::m_inputColor[uv - offset].b;

    PassSrg::m_outputColor[uv] = float4(r, g, b, 1.0);
}