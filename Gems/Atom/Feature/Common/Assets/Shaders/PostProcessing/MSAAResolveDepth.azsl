/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#include <Atom/Features/SrgSemantics.azsli>

#include <Atom/Features/PostProcessing/FullscreenVertex.azsli>
#include <Atom/Features/PostProcessing/PostProcessUtil.azsli>

ShaderResourceGroup PassSrg : SRG_PerPass
{
    Texture2DMS<float> m_depthTexture;
}


struct PSOutput
{
    float m_depth : SV_Depth;
};


PSOutput MainPS(VSOutput IN)
{
    int width = 0;
    int height = 0;
    int numberOfSamples = 0;
    PassSrg::m_depthTexture.GetDimensions(width, height, numberOfSamples);

    int2 coord = int2(width * IN.m_texCoord.x, height * IN.m_texCoord.y);

    PSOutput OUT;
  
    float result = 1.0f;
    float avg = 0;
    for(int sampleIndex = 0 ; sampleIndex < numberOfSamples ; ++sampleIndex)
    {
        const float currDepth = PassSrg::m_depthTexture.Load(coord, sampleIndex);
        avg += currDepth;
        result = max(result, currDepth);
    }
    OUT.m_depth = avg / (float)numberOfSamples;//result;

    return OUT;
}
